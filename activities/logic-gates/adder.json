{
  "name": "Adder",
  "notes": "Set bus port E to be A XOR B",
  "interface": {
    "showPinColors": false,
    "showBusColors": false,
    "showBusLabels": true,
    "allowAutoWiring": true,
    "showPinouts": false,
    "showProbe": "edit",
    "showInputAutoToggles": true,
    "showGlobalIOWires": true
  },
  "busSize": 12,
  "busInputSize": 3,
  "busOutputSize": 2,
  "boards": [
    {
      "logicChipDrawer": {
        "chips": {
          "7404": {"max": 3},
          "7411": {"max": 3},
          "7408": {"max": 3}
        }
      },
      "localInputSize": 4,
      "localOutputSize": 4,
      "autoWiring": {
        "chips": {
          "not": {
            "type": "7404",
            "x": 150,
            "y": 90
          },
          "3and1": {
            "type": "7411",
            "x": 415,
            "y": 90
          },
          "3and2": {
            "type": "7411",
            "x": 150,
            "y": 220
          },
          "2and": {
            "type": "7408",
            "x": 415,
            "y": 220
          }
        },
        "wires": [
          "bus:1,not:13",     "// create NOT A on not pin 12",
          "bus:2,not:11",     "// create NOT A on not pin 12",
          "bus:3,not:9",      "// create NOT A on not pin 12",

          "bus:1,3and1:13",   "// A to 3 and bus",
          "not:10,3and1:1",     "// NOT B to 3 and bus",
          "not:8,3and1:2",      "// NOT C to 3 and bus",
          "3and1:12,bus:4",  "// (A AND NOT B AND NOT C) to bus",

          "not:12,3and1:11",   "// NOT A to 3 and bus",
          "bus:2,3and1:10",  "// B to 3 and bus",
          "not:8,3and1:9",     "// NOT C to 3 and bus",
          "3and1:8,bus:5",  "// (NOT A AND B AND NOT C) to bus",

          "not:12,3and1:3",    "// NOT A to 3 and bus",
          "not:10,3and1:4",    "// NOT B to 3 and bus",
          "bus:3,3and1:5",   "// C to 3 and bus",
          "3and1:6,bus:6",  "// (NOT A AND B AND C) to bus",

          "bus:1,3and2:11",  "// A to 3 and bus",
          "bus:2,3and2:10",  "// B to 3 and bus",
          "bus:3,3and2:9",   "// C to 3 and bus",
          "3and2:8,bus:7",  "// (A AND B AND C) to bus",

          "bus:1,2and:13",   "// A to 2 and bus",
          "bus:2,2and:12",   "// B to 2 and bus",
          "2and:11,bus:8",  "// (A AND B) to bus",

          "bus:2,2and:10",   "// B to 2 and bus",
          "bus:3,2and:9",    "// C to 2 and bus",
          "2and:8,bus:9",   "// (B AND C) to bus",

          "bus:1,2and:1",    "// A to 2 and bus",
          "bus:3,2and:2",    "// C to 2 and bus",
          "2and:3,bus:10",   "// (A AND C) to bus"
        ]
      }
    },
    {
      "logicChipDrawer": {
        "chips": {
          "7432": {"max": 5}
        }
      },
      "localInputSize": 4,
      "localOutputSize": 4,
      "autoWiring": {
        "chips": {
          "or1": {
            "type": "7432",
            "x": 150,
            "y": 135
          },
          "or2": {
            "type": "7432",
            "x": 415,
            "y": 135
          }
        },
        "wires": [
          "bus:4,or1:13",   "// (A AND NOT B AND NOT C) to or bus",
          "bus:5,or1:12",   "// (NOT A AND B AND NOT C) to or bus",
          "or1:11,or2:13",   "// ((A AND NOT B AND NOT C) OR (NOT A AND B AND NOT C)) to sum or bus",

          "bus:6,or1:10",   "// (NOT A AND B AND C) to or bus",
          "bus:7,or1:9",   "// (A AND B AND C) to or bus",
          "or1:8,or2:12",   "// ((NOT A AND B AND C) OR (A AND B AND C)) to sum or bus",

          "bus:8,or1:1",   "// (A AND B) to or bus",
          "bus:9,or1:2",   "// (B AND C) to or bus",
          "or1:3,or2:1",   "// ((A AND B) OR (B AND C)) to carry or bus",

          "bus:10,or2:2",   "// (A AND C) to carry or bus",

          "or2:11,bus:11",   "// (((A AND NOT B AND NOT C) OR (NOT A AND B AND NOT C)) OR ((NOT A AND B AND C) OR (A AND B AND C))) to sum bus",

          "or2:3,bus:12",   "// (((A AND B) OR (B AND C)) OR (A AND C)) to carry bus"
        ]
      }
    }
  ],
  "truthTable": [
    [[0, 0, 0], [0, 0]],
    [[0, 0, 1], [1, 0]],
    [[0, 1, 0], [1, 0]],
    [[0, 1, 1], [0, 1]],
    [[1, 0, 0], [1, 0]],
    [[1, 0, 1], [0, 1]],
    [[1, 1, 0], [0, 1]],
    [[1, 1, 1], [1, 1]]
  ]
}
